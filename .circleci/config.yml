version: 2.1

orbs:
  docker: circleci/docker@2.2.0
  python: circleci/python@2.1.1

jobs:
  test:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Simple test
          command: |
            python -m pip install --upgrade pip
            pip install pytest
            python -c "import sys; print(f'Python {sys.version}')"
            echo "Running simple test check..."
            test -d tests || mkdir -p tests
            echo "Tests directory verified"

  build-and-push:
    docker:
      - image: cimg/base:2023.10
    environment:
      DOCKER_HUB_USER: fistdat
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - docker/check:
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_PASSWORD
      - run:
          name: Define VERSION variable
          command: |
            echo "export VERSION=v1.$(echo $CIRCLE_BUILD_NUM)" >> $BASH_ENV
            source $BASH_ENV
            echo "Set image version to: $VERSION"
      - run:
          name: Build Docker image
          command: |
            docker build -t ${DOCKER_HUB_USER}/mlops-flask:${VERSION} -f docker/Dockerfile.flask .
      - run:
          name: Basic security check
          command: |
            # Simple container security check
            echo "Security check skipped in simplified config"
      - run:
          name: Push to Docker Hub
          command: |
            echo "Pushing image to Docker Hub with version tag: ${VERSION}"
            docker push ${DOCKER_HUB_USER}/mlops-flask:${VERSION}
            
            echo "Creating 'latest' tag as well"
            docker tag ${DOCKER_HUB_USER}/mlops-flask:${VERSION} ${DOCKER_HUB_USER}/mlops-flask:latest
            docker push ${DOCKER_HUB_USER}/mlops-flask:latest
            
            echo "Successfully pushed images:"
            echo "- ${DOCKER_HUB_USER}/mlops-flask:${VERSION}"
            echo "- ${DOCKER_HUB_USER}/mlops-flask:latest"

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only: main
          context:
            - docker-hub-credentials 