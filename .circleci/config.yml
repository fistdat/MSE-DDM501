version: 2.1

orbs:
  docker: circleci/docker@2.2.0
  python: circleci/python@2.1.1

jobs:
  test:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Simple test
          command: |
            python -m pip install --upgrade pip
            pip install pytest
            python -c "import sys; print(f'Python {sys.version}')"
            echo "Running simple test check..."
            test -d tests || mkdir -p tests
            echo "Tests directory verified"

  build-and-push:
    docker:
      - image: cimg/base:2023.10
    environment:
      DOCKER_HUB_USER: fistdat
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - docker/check:
          docker-username: DOCKER_USERNAME
          docker-password: DOCKER_PASSWORD
      - run:
          name: Install Docker Compose v2
          command: |
            sudo apt-get update && sudo apt-get install -y docker-compose-plugin
            docker compose version || sudo apt-get install -y docker-compose
      - run:
          name: Define VERSION variable
          command: |
            echo "export VERSION=v1.$(echo $CIRCLE_BUILD_NUM)" >> $BASH_ENV
            source $BASH_ENV
            echo "Set image version to: $VERSION"
      - run:
          name: Build and tag Flask image
          command: |
            echo "Building Flask image with tag: ${DOCKER_HUB_USER}/mlops-flask:${VERSION}"
            docker build -t ${DOCKER_HUB_USER}/mlops-flask:${VERSION} -f docker/Dockerfile.flask .
            docker tag ${DOCKER_HUB_USER}/mlops-flask:${VERSION} ${DOCKER_HUB_USER}/mlops-flask:latest
      - run:
          name: Build and tag MLflow image
          command: |
            echo "Building MLflow image with tag: ${DOCKER_HUB_USER}/mlops-mlflow:${VERSION}"
            docker build -t ${DOCKER_HUB_USER}/mlops-mlflow:${VERSION} -f docker/Dockerfile.mlflow .
            docker tag ${DOCKER_HUB_USER}/mlops-mlflow:${VERSION} ${DOCKER_HUB_USER}/mlops-mlflow:latest
      - run:
          name: Verify images
          command: |
            docker images | grep ${DOCKER_HUB_USER}
      - run:
          name: Create docker-compose.test.yml for local testing
          command: |
            cat > docker-compose.test.yml <<EOL
            version: '3.8'
            
            services:
              mlflow:
                image: ${DOCKER_HUB_USER}/mlops-mlflow:${VERSION}
                container_name: mlops-mlflow
                ports:
                  - "5002:5002"
                networks:
                  - mlops-network
                restart: unless-stopped
                environment:
                  - MLFLOW_TRACKING_URI=http://localhost:5002
              
              flask-app:
                image: ${DOCKER_HUB_USER}/mlops-flask:${VERSION}
                container_name: mlops-flask
                ports:
                  - "5001:5001"
                networks:
                  - mlops-network
                environment:
                  - MLFLOW_TRACKING_URI=http://mlflow:5002
                depends_on:
                  - mlflow
            
            networks:
              mlops-network:
                driver: bridge
            EOL
            
            cat docker-compose.test.yml
      - run:
          name: Push images to Docker Hub
          command: |
            # Push Flask app image
            echo "Pushing Flask app image to Docker Hub with version tag: ${VERSION}"
            docker push ${DOCKER_HUB_USER}/mlops-flask:${VERSION}
            docker push ${DOCKER_HUB_USER}/mlops-flask:latest
            
            # Push MLflow image
            echo "Pushing MLflow image to Docker Hub with version tag: ${VERSION}"
            docker push ${DOCKER_HUB_USER}/mlops-mlflow:${VERSION}
            docker push ${DOCKER_HUB_USER}/mlops-mlflow:latest
            
            echo "Successfully pushed images:"
            echo "- ${DOCKER_HUB_USER}/mlops-flask:${VERSION}"
            echo "- ${DOCKER_HUB_USER}/mlops-flask:latest"
            echo "- ${DOCKER_HUB_USER}/mlops-mlflow:${VERSION}"
            echo "- ${DOCKER_HUB_USER}/mlops-mlflow:latest"

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
          filters:
            branches:
              only: main
          context:
            - docker-hub-credentials 