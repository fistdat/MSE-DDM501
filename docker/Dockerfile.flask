# Base image
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    MLFLOW_TRACKING_URI=http://mlflow:5002 \
    FLASK_SECRET_KEY=mlops-secret-key \
    FLASK_APP=app.py \
    FLASK_ENV=production \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1

# Set working directory
WORKDIR /app

# Install system dependencies - combine RUN commands to reduce layers
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    gcc \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY docker/flask-requirements.txt .
RUN pip install -r flask-requirements.txt && \
    pip install flask-cors==5.0.1 gunicorn==21.2.0

# Copy application files
COPY app.py /app/
COPY mlib.py /app/
COPY templates/ /app/templates/
COPY static/ /app/static/
COPY mlflow_scripts/ /app/mlflow_scripts/
COPY tuning_scripts/ /app/tuning_scripts/

# Create necessary directories with proper permissions
RUN mkdir -p /app/models /app/tuning_results && \
    useradd -m appuser && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
  CMD curl -f http://localhost:5001/health || exit 1

# Expose port for the Flask app
EXPOSE 5001

# Command to run the Flask app
CMD ["gunicorn", "--bind", "0.0.0.0:5001", "--workers", "2", "--timeout", "120", "app:app"] 